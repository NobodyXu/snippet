syntax on

set nocompatible

filetype on
filetype indent on
filetype plugin on
filetype plugin indent on

"set background=light
"colorscheme solarized

" Enable viewing man page in vim by ":Man ..."
runtime ftplugin/man.vim
" Set keyword 'K' to use ":Man ..." to view man pages in vim
set keywordprg=:Man

set ruler
set number "show the line number
set laststatus=2 "always displays statusline
set autoindent "inherit the way of indent in the previous line

set expandtab

"provides indent for c
set smartindent
set cindent
set softtabstop=4
set shiftwidth=4

set foldmethod=syntax

set shell=/bin/sh

" Make netrw change dir while exploring
let g:netrw_keepdir = 0

" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL

" Configure ALE
let g:ale_cpp_clang_options = "-std=c++17"

" lh-brackets
let g:usemarks = 0

" Add ctags
set tags=/usr/include/tags
set tags+=/usr/local/include/tags
set tags+=./tags

" Use F8 to open/close tagbar
nmap <F8> :TagbarToggle<CR>

" nvim-R
let r_syntax_folding = 1

" R output is highlighted with current colorscheme
let g:rout_follow_colorscheme = 1
" R commands in R output are highlighted
let g:Rout_more_colors = 1

" Use vim 8.1/nvim builtin :term feature
let g:R_in_buffer = 1
" After \ao, open the *.Rout in a new split window
let g:R_routnotab = 1

" Pymode configuration
" Warning: This is very long
" Turn pymode on
let g:pymode = 1
" Turn off plugin's warnings
let g:pymode_warnings = 1
" Use default settings(documented in :h pymode
let g:pymode_options = 1

" Use python3 and enable indent
let g:pymode_python = 'python3'
let g:pymode_indent = 1

" Show pydoc when pressing 'K'
let g:pymode_doc = 1
let g:pymode_doc_bind = 'K'

" Run python code
let g:pymode_run = 1
" It seems that by default, '<leader>' in vim is '\'
let g:pymode_run_bind = '<leader>r'

" Linting
let g:pymode_lint = 1
let g:pymode_lint_on_fly = 0
let g:pymode_lint_message = 1
let g:pymode_lint_checkers = 'pylint'
let g:pymode_lint_cwindow = 1
let g:pymode_lint_signs = 1

" Turn on code completion
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 1

" Syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_slow_sync = 0
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
